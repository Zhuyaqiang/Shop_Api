<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zyq.shopserver.system.mapper.ManagerMapper">
    <resultMap id="BaseResultMap" type="com.zyq.shopserver.system.entity.Manager">
        <id column="mg_id" property="mg_id"/>
        <result column="mg_name" property="mg_name"/>
        <result column="mg_pwd" property="mg_pwd"/>
        <result column="mg_time" property="mg_time"/>
        <result column="role_id" property="role_id"/>
        <result column="mg_mobile" property="mg_mobile"/>
        <result column="mg_email" property="mg_email"/>
        <result column="mg_state" property="mg_state"/>
    </resultMap>

<!--    <resultMap id="lazyLoadRoles" type="com.zyq.shopserver.system.entity.Manager" extends="BaseResultMap">-->
<!--        <result property="role_name" typeHandler="com.zyq.shopserver.mapper.ManagerMapper.getRoleByRoleId" column="mg_id"></result>-->
<!--    </resultMap>-->
    <select id="findUserByUsername" resultType="com.zyq.shopserver.system.entity.Manager">
        select a.*, b.role_name from sp_manager a, sp_role b where a.mg_name=#{username} and a.role_id=b.role_id
    </select>

    <select id="findUserByUserId" resultType="com.zyq.shopserver.system.entity.Manager">
        select a.*, b.role_name from sp_manager a, sp_role b where a.mg_id=#{id} and a.role_id=b.role_id
    </select>

    <select id="getRoleByRoleId" resultType="java.lang.String">
        SELECT role_name FROM sp_role where role_id=#{role_id}
    </select>
    <select id="getUsers" resultType="com.zyq.shopserver.system.entity.Manager">
        select a.*, b.role_name from sp_manager a, sp_role b where a.mg_name like "%"#{query}"%" and a.role_id=b.role_id
    </select>

    <insert id="jsonUser" parameterType="com.zyq.shopserver.system.entity.Manager">
        insert into sp_manager(mg_name, mg_pwd, mg_time, role_id, mg_mobile, mg_email, mg_state) values (#{manager.mg_name}, #{manager.mg_pwd}, #{manager.mg_time}, #{manager.role_id}, #{manager.mg_mobile}, #{manager.mg_email}, #{manager.mg_state});
    </insert>

    <update id="editUserState">
        update sp_manager set mg_state = #{state} where mg_id = #{uid}
    </update>

    <update id="editUserInfo">
        update sp_manager set mg_email = #{email}, mg_mobile = #{mobile} where mg_id = #{id}
    </update>

    <delete id="deleteUser">
        delete from sp_manager where mg_id = #{id}
    </delete>

    <update id="editUserRole">
        update sp_manager set role_id = #{rid} where mg_id=#{uid} and (select role_id from sp_role where role_id = #{rid}) is not null
    </update>
</mapper>